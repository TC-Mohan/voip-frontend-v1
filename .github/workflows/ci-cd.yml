name: CI/CD Pipeline with SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # - name: Run tests with coverage
      #   run: npm test -- --coverage --coverageDirectory=coverage

      # - name: Run tests with coverage
      #   run: npm test -- --coverage --coverageDirectory=coverage --testPathIgnorePatterns=/src/assets/vendor/tinymce/
      #   continue-on-error: true

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://88b4-2409-40c4-28a-34ed-947e-bff1-17ad-3b60.ngrok-free.app"
        with:
          args: >
            -Dsonar.qualitygate.wait=true

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build the app
        run: npm run build

      - name: Deploy to Server (Example)
        run: |
          echo "Deploying to server..."
          # Add your deployment steps here
          # Example: Copy build folder to a server using SCP or deploy to a cloud service
